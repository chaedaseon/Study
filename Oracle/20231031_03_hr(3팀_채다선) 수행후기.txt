--■■■ 팀 별 실습 수행 과제 ■■■--
-- 제출 파일명
-- ·20231031_03_hr(3팀_채다선).sql
-- ·20231031_03_hr(3팀_채다선) 수행후기.txt


HR 샘플스키마 테이블 7개 중 COUNTRIES3 테이블을 담당하였고,
COUNTRIES와 같은 구조의 테이블을 생성하는 구문을 작성하기 위하여 
테이블의 구조, 제약조건 등을 확인하였고 이를 토대로 COUNTRIES3 생성 시
3개의 컬럼과 자료형, 제약조건인 NOT NULL과 PRIMARY KEY를 추가하였다.
제약조건 중 FOREIGN KEY는 테이블 생성 후 추가하였다.

내가 담당한 테이블을 생성할 때에는 1개의 테이블만 생성구문만 작성하는 거라
문제점이 없었지만, 각자 테이블을 만든 후 다같이 모였을 때 각각의 테이블 생성 시 
테이블들 생성의 순서 없이 무작정 테이블을 생성했을 때 테이블간의 관계가 만들어지지 않아
부모-자식 관계에 대한 중요성을 다시 한 번 깨달았고
이를 해결하기 위해 테이블 간 기본 키, 참조 키를 정리하면서 테이블 생성 구문에
테이블의 생성 순서를 번호를 적어두었다.
JOBS3 / REGIONS3 / COUNTRIES3 / LOCATIONS3 / DEPARTMENTS3 / EMPLOYEES3 / JOB_HISTORY3

그 다음, EMPLOYEES3 테이블과 DEPARTMENTS3 테이블 생성 시 두 테이블 모두
MANAGER_ID를 참조하는데 DEPARTMENTS3 테이블의 MANAGER_ID 데이터 입력 시
MANAGER_ID는 EMPLOYEES3 테이블에서 EMPLOYEE_ID를 참조하여 받아와야 하므로
DEPARTMENTS3 테이블에서는 데이터 입력 시 MANAGER_ID를 NULL로 입력한 후
EMPLOYEES3 테이블에 데이터를 입력한 후 DEPARTMENTS3 테이블에 MANAGER_ID를
UPDATE문을 이용하여 데이터를 갱신하였다.
지금 후기를 작성하면서 생각을 해보면 EMPLOYEES3 테이블의 데이터를 먼저 입력했다면 
DEPARTMENTS3 테이블의 MANAGER_ID 데이터 입력 시 NULL로 입력하지 않아도 한 번에 
데이터를 입력할 수 있겠다는 생각이 들었다.

또, 처음에는LOCATIONS3 테이블과 DEPARTMENTS3 테이블, EMPLOYEES3 테이블의 각각 ID가 그냥 
입력값인 줄 알고 값을 직접 하나씩 입력해서 넣었는데 나중에 시퀀스 조회를 알게 되어서
시퀀스 조회를 해보니 각 테이블들의 ID는 시퀀스 생성을 하여 데이터 입력을 한 것을 알게 되었다.
그래서 시퀀스를 생성하여 각각의 데이터를 입력하는 과정에서 시퀀스는 잘못 입력한 INSERT문에도
자동으로 증가값이 발생하여 시퀀스를 사용할 때에는 데이터 입력 시 더욱 신중하게 확인해 가면서
입력해야겠다는 생각을 했다.


수업시간에 이론적으로 1개의 부모 테이블과 1개의 자식 테이블을 가지고 실습을 하다보니 
테이블 간 관계에 대한 중요성을 매우 크게 느끼진 못했던 것 같았는데 이번 과제를 수행하면서
많은 테이블들을 가지고 데이터베이스를 구축할 때 테이블 생성과 관계가 얼마나 중요한지를 
깨달았고 무작정 테이블에 컬럼, 자료형, 제약조건을 넣어보는 것이 아니라 테이블 간 관계를
이미지나 글로 정리한 후 생성구문을 작성하는 것이 현재 나에게는 많은 도움이 될 것 같다. 
또, 많은 테이블들은 생성하고 데이터를 입력하는 과정에서 손이 꼬이고 힘들 때 팀원들과
침착하게 같이 알려주고 정리를 해 나아가면서 나의 조급함을 컨트롤 할 수 있었던 것 같다. 